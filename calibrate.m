function [] = calibrate(calibrationfile, voltage)
%% description
% autopopulate attenutation files with new calibration values from SigCal
% (TDT)
% inputs: 
% calibrationfile: is the name of the .csv file generated by SigCal 
% voltage: is the speaker voltage you used to generate the calibration
% values - either update manually in your RPvdsEx files or feed in this
% file
%
% outputs: 
% autogenerates 
% 1) .txt files of attenuation values for your list (and order) of tones 
% in HALFOCTAVE.txt and QUARTEROCTAVE.txt at various sound pressure levels 
% (SPLs; ranging from 30dB to 70db)
% 2) .txt file with voltage number used to produce calibration 
% 3) a file with date of last calibration
%
% !!! always manually double check that things look normal !!! 

%%
% import calibration values
filelocation = '/Users/katie/Documents/MATLAB/CALIBRATE/';                 % location of calibration file and where .txt attenuation files will be     
calibrationvalues = dlmread([filelocation calibrationfile], ',', 1,0);
maxdb = calibrationvalues(:,2);
toneval = calibrationvalues(:,1);

% determine attenuation values for various decible levels 
att70 = maxdb-70;

% in case the tones aren't exact compare to the list of tones
% half octave tones 
tonestomatch         = dlmread([filelocation 'HALFOCTAVE.txt']);
[unitones, ~, order] = unique(tonestomatch);
numtones             = numel(unitones); 
numtottones          = numel(order); 

% determine the correct attenuation values for half octave tone list 
for j = 1:numtones
    clear difference ind attind
    difference = abs(unitones(j) - toneval); 
    toneind = find(difference == min(difference));                         % determines tone within the general file 
    attind  = find(order == j, 1, 'first');                                      % determines location of tone in list
    ind = attind:numtones:numtottones;
    att_70_HALF(ind,1) = att70(toneind);                                % plugs in the correct 60 dB attenuation value
end

att_60_HALF = att_70_HALF+10;
att_50_HALF = att_70_HALF+20;
att_40_HALF = att_70_HALF+30;
att_30_HALF = att_70_HALF+40;

dlmwrite([filelocation 'half_ATT_30dB.txt'], att_30_HALF); 
dlmwrite([filelocation 'half_ATT_40dB.txt'], att_40_HALF); 
dlmwrite([filelocation 'half_ATT_50dB.txt'], att_50_HALF); 
dlmwrite([filelocation 'half_ATT_60dB.txt'], att_60_HALF); 
dlmwrite([filelocation 'half_ATT_70dB.txt'], att_70_HALF); 

% disp('new attenuation tones for half octave tones are done');
% quarter octave tones
clear tonestomatch unitones order numtones numtottones
tonestomatch         = dlmread([filelocation 'QUARTEROCTAVE.txt']);
[unitones, ~, order] = unique(tonestomatch);
numtones             = numel(unitones); 
numtottones          = numel(order); 
% determine the correct attenuation values for quarter octave tone list 
for j = 1:numtones
    clear difference ind attind
    difference = abs(unitones - toneval(j)); 
    toneind = find(difference == min(difference));                         % determines tone
    attind  = find(order == toneind);                                  % determines location of tone in list
    ind = attind:numtones:numtottones; 
    att_70_QUART(attind,1) = att70(toneind);                                   % plugs in the correct 60 dB attenuation value
end

att_60_QUART = att_70_QUART+10;
att_50_QUART = att_70_QUART+20;
att_40_QUART = att_70_QUART+30;
att_30_QUART = att_70_QUART+40;

dlmwrite([filelocation 'quarter_ATT_30dB.txt'], att_30_QUART); 
dlmwrite([filelocation 'quarter_ATT_40dB.txt'], att_40_QUART); 
dlmwrite([filelocation 'quarter_ATT_50dB.txt'], att_50_QUART); 
dlmwrite([filelocation 'quarter_ATT_60dB.txt'], att_60_QUART);
dlmwrite([filelocation 'quarter_ATT_70dB.txt'], att_70_QUART);

disp('new attenuation tones for quarter octave tones are done');

% export a couple files automatically
[year, month, day ] = KAMB_findDate;
dlmwrite([filelocation 'lastcalibrated.txt'], [month, '/', day, '/', year]); 
dlmwrite([filelocation 'voltageused.txt'], voltage); 

end